name: For each commit and PR
on:
  push:
  pull_request:

jobs:
  validation:
    runs-on: [ubuntu-latest]
    env:
      CGO_ENABLED: 0
    steps:
      - name: Setup Dynamic Env
        run: |
          echo "MAKEFLAGS=-j$(nproc)" | tee $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install nix
        uses: cachix/install-nix-action@018abf956a0a15673dae4932ae26f0f071ac0944
        with:
          nix_path: nixpkgs=channel:nixpkgs-unstable

      - name: Multiline env set
        run: |
          set -x
          v=$(printf 'hello\nworld\n')
          echo "$v" | wc -l
          echo "v_naive=$v" >>$GITHUB_ENV
          echo "v_escaped=${v//$'\n'/'%0A'}" >>$GITHUB_ENV

      - name: Multiline env check
        run: |
          set -x
          echo "$v" | wc -l
          echo "$v_naive"
          echo "$v_naive" | wc -l
          echo "$v_escaped="
          echo "$v_escaped=" | wc -l

      - name: Install Nix Packages
        run: |
          set -x
          echo PATHs pre
          env -0 | while IFS='=' read -r -d '' n v; do
          	printf "%s\n" "$n"
          done | sort | tee envs-pre
          tr ':' '\n' <<<$PATH | sort | tee path-pre
          tr ':' '\n' <<<$PYTHONPATH | sort | tee pythonpath-pre

          nix-env -f shell.nix -i -A buildInputs

          echo PATHs post
          env -0 | while IFS='=' read -r -d '' n v; do
          	printf "%s\n" "$n"
          done | sort | tee envs-post
          tr ':' '\n' <<<$PATH | sort | tee path-post
          tr ':' '\n' <<<$PYTHONPATH | sort | tee pythonpath-post

          diff -u envs-pre envs-post
          diff -u path-pre path-post
          diff -u pythonpath-pre pythonpath-post

      - name: Check Nix Packages
        run: |
          set -x
          echo PATHs
          env -0 | while IFS='=' read -r -d '' n v; do
          	printf "%s\n" "$n"
          done | sort | tee envs-post
          tr ':' '\n' <<<$PATH | sort
          tr ':' '\n' <<<$PYTHONPATH | sort

      - name: Install Go tools
        run: make tools

      - name: Linters and Go Formatting
        run: make verify

      - name: Non Go Formatters
        run: nix-shell --run ./.github/workflows/formatters.sh

      - name: Install ZFS
        run: sudo apt-get -y update && sudo apt-get -y install zfsutils-linux

      - name: Tests
        run: sudo make test
